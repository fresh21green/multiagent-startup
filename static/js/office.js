// ========================================================================
// üß≠ 9. –û—Ç—Ä–∏—Å–æ–≤–∫–∞ ForceGraph ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –æ—Ñ–∏—Å
// ========================================================================
// –°–æ–∑–¥–∞—ë—Ç –≥—Ä–∞—Ñ: –∫–∞—Ç–∞–ª–æ–≥–∏ (—à–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫–∏) –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (—É–∑–ª—ã)
// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
// - –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –º–∏–≥–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–¥–∞—á
// - –ø–æ–¥—Å–≤–µ—Ç–∫—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É–∑–ª–∞
// - –ø–ª–∞–≤–Ω—É—é –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é —Ü–≤–µ—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
// ========================================================================

async function loadOfficeGraph() {
  const el = document.getElementById("office-graph");
  if (!el) return;

  setSystemStatus("busy", "‚öôÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –æ—Ñ–∏—Å...");

  // === –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É–∑–µ–ª (–∞–≥–µ–Ω—Ç –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥)
  let currentNode = null;


  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  const foldersRes = await fetch("/folders");
  const folders = foldersRes.ok ? await foldersRes.json() : ["root"];
  const agents = [];

  for (const folder of folders) {
    const res = await fetch(`/folder/${folder}`);
    if (res.ok) {
      const list = await res.json();
      for (const a of list) {
        a.folder = folder;
        agents.push(a);
      }
    }
  }

  const data = buildGraphData(agents);

  // –°–æ–∑–¥–∞—ë–º ForceGraph
  const Graph = ForceGraph()(el)
    .width(el.clientWidth)
    .height(740)
    .graphData(data)
    .nodeId("id")
    .nodeRelSize(8)
    .nodeVal(n => (n.type === "folder" ? 16 : 8))
    .nodeColor(colorByStatus)
    .nodeLabel(n => n.label)
    .linkColor(() => "rgba(100,200,255,0.2)")
    .linkDirectionalParticles(0)

    // üí´ –õ–∏–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —à—Ç—É—Ä–º–µ)
    .linkCanvasObject((link, ctx) => {
      const progress = link.transferProgress || 0;
      const src = link.source;
      const tgt = link.target;
      if (!src || !tgt) return;

      const x1 = src.x, y1 = src.y, x2 = tgt.x, y2 = tgt.y;

      // –û—Å–Ω–æ–≤–Ω–∞—è –ª–∏–Ω–∏—è
      ctx.strokeStyle = "rgba(100,200,255,0.15)";
      ctx.lineWidth = 1.5;
      ctx.beginPath();
      ctx.moveTo(x1, y1);
      ctx.lineTo(x2, y2);
      ctx.stroke();

      // –í–æ–ª–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∏
      if (progress > 0 && progress < 1) {
        const cx = x1 + (x2 - x1) * progress;
        const cy = y1 + (y2 - y1) * progress;
        const gradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, 8);
        gradient.addColorStop(0, "rgba(0,200,255,0.9)");
        gradient.addColorStop(1, "rgba(0,200,255,0)");
        ctx.fillStyle = gradient;
        ctx.beginPath();
        ctx.arc(cx, cy, 8, 0, 2 * Math.PI);
        ctx.fill();
      }
    })

    // ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Å–∏–ª –≥—Ä–∞—Ñ–∞
    .d3Force("charge", d3.forceManyBody().strength(-200))
    .d3Force("center", null)
    .cooldownTicks(100)
    .onEngineStop(() => Graph.zoomToFit(400))

    // üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —É–∑–ª—É ‚Üí –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    .onNodeClick(n => onGraphNodeClick(n))

    // üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —É–∑–ª–æ–≤ (–∏–∫–æ–Ω–∫–∏, –ø–æ–¥—Å–≤–µ—Ç–∫–∞, –∞–Ω–∏–º–∞—Ü–∏—è)
    .nodeCanvasObject((node, ctx, globalScale) => {
      const label = node.label;
      const fontSize = 10 / globalScale;
      const size = node.type === "folder" ? 34 : 16;

      let { color, icon } = getAgentStyle(node);

      // –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Ü–≤–µ—Ç–∞ (–∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è)
      const startColor = node._colorTransition || node.baseColor || "#9ba9bb";
      const targetColor = color || "#06d6a0";
      node._colorTransition = lerpColor(startColor, targetColor, 0.15);
      ctx.strokeStyle = node._colorTransition;
      ctx.fillStyle = (node._colorTransition || "#9ba9bb") + "33";

      // === –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ —Ü–≤–µ—Ç–∞ ===
      function lerpColor(a, b, amount) {
        if (!a) return b;
        if (!b) return a;
        if (!a.startsWith("#") || !b.startsWith("#")) return b;

        const ah = parseInt(a.replace("#", ""), 16);
        const bh = parseInt(b.replace("#", ""), 16);
        const ar = ah >> 16, ag = (ah >> 8) & 0xff, ab = ah & 0xff;
        const br = bh >> 16, bg = (bh >> 8) & 0xff, bb = bh & 0xff;
        const rr = Math.round(ar + amount * (br - ar));
        const rg = Math.round(ag + amount * (bg - ag));
        const rb = Math.round(ab + amount * (bb - ab));
        return "#" + ((1 << 24) + (rr << 16) + (rg << 8) + rb).toString(16).slice(1);
      }

      // === –®–µ—Å—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫ ===
      ctx.beginPath();
      for (let i = 0; i < 6; i++) {
        const angle = Math.PI / 3 * i + Math.PI / 6;
        const px = node.x + size * Math.cos(angle);
        const py = node.y + size * Math.sin(angle);
        if (i === 0) ctx.moveTo(px, py);
        else ctx.lineTo(px, py);
      }
      ctx.closePath();
      ctx.fillStyle = color + "33";
      ctx.fill();
      ctx.lineWidth = 2;
      ctx.strokeStyle = color;
      ctx.shadowColor = color;
      ctx.shadowBlur = 8;
      ctx.stroke();
      ctx.shadowBlur = 0;

      // === –ò–∫–æ–Ω–∫–∏: –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —Ä–æ–ª–µ–π ===
      ctx.save();
      ctx.lineWidth = 1.6;
      ctx.strokeStyle = "#e0f7ff";
      ctx.fillStyle = "#e0f7ff";

      if (node.type === "folder") {
        // üë• ‚Äî —Å–∏–º–≤–æ–ª –æ—Ç–¥–µ–ª–∞
        ctx.beginPath();
        ctx.arc(node.x - 4, node.y - 2, 3, 0, 2 * Math.PI);
        ctx.arc(node.x + 4, node.y - 2, 3, 0, 2 * Math.PI);
        ctx.fill();
        ctx.beginPath();
        ctx.moveTo(node.x - 8, node.y + 4);
        ctx.lineTo(node.x + 8, node.y + 4);
        ctx.stroke();
      } else {
        // üë®‚Äçüíª / üé® / üß† / ‚öôÔ∏è ‚Äî –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        drawAgentIcon(icon, node, ctx);
      }

      ctx.restore();

      // === –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É–∑–ª–∞ ===
      if (window.__OfficeGraph__?.selectedNodeId === node.id) {
        ctx.beginPath();
        ctx.arc(node.x, node.y, size + 6, 0, 2 * Math.PI);
        ctx.fillStyle = "rgba(0,180,255,0.15)";
        ctx.fill();
        ctx.shadowColor = "#00b4ff";
        ctx.shadowBlur = 20;
        ctx.lineWidth = 2;
        ctx.strokeStyle = "#00b4ff";
        ctx.stroke();
        ctx.shadowBlur = 0;
      }

      // === –ú—è–≥–∫–æ–µ –º–∏–≥–∞–Ω–∏–µ (–ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏) ===
      if (node.status === "running") {
        const t = (Date.now() / 250);
        const pulse = 0.6 + 0.4 * Math.sin(t);
        ctx.beginPath();
        ctx.arc(node.x, node.y, size + 6 + 4 * pulse, 0, 2 * Math.PI);
        ctx.fillStyle = `rgba(0,180,255,${0.3 + 0.3 * pulse})`;
        ctx.fill();
      }

      // === –ü–æ–¥–ø–∏—Å—å ===
      ctx.font = `${fontSize}px Inter`;
      ctx.textAlign = "center";
      ctx.fillStyle = "#9ba9bb";
      ctx.fillText(label, node.x, node.y + size + 12);
    });

    

  // üîó –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  window.__OfficeGraph__ = {
    Graph,
    selectedNodeId: null,
    setAgentStatus(slug, status, resultHtml, taskText) {
      const data = Graph.graphData();
      const node = data.nodes.find(n => n.id === slug);
      if (!node) return;
      node.status = status;
      if (taskText || resultHtml) {
        node.last_task = node.last_task || {};
        if (taskText) node.last_task.task = taskText;
        if (resultHtml) node.last_task.result = { html: resultHtml };
      }
      Graph.graphData(Graph.graphData()); // –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞
    },
    refresh() { Graph.graphData(Graph.graphData()); }
  };

    // –≤—ã–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è Graph
  disableForceGraphAutoZoom(window.__OfficeGraph__?.Graph);

  setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã
  window.addEventListener("resize", () => Graph.width(el.clientWidth));

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π
  Graph.d3Force('charge').strength(-50);
  Graph.d3Force('link').distance(link => link.source.type === 'folder' ? 100 : 90);
}


// ------------------------------------------------------------------------
// üé® 10. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏ –∞–≥–µ–Ω—Ç–∞
// ------------------------------------------------------------------------
function getAgentStyle(agent) {
  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  if (["running", "done", "error"].includes(agent.status)) {
    return { color: colorByStatus(agent), icon: agent.icon || "generic" };
  }

  // –ï—Å–ª–∏ –±–∞–∑–æ–≤—ã–π —Ü–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω
  if (agent.baseColor) {
    return { color: agent.baseColor, icon: agent.icon || "generic" };
  }

  // –ù–∞–∑–Ω–∞—á–∞–µ–º —Ü–≤–µ—Ç –ø–æ —Ä–æ–ª–∏
  let color = "#9ba9bb", icon = "generic";
  switch (agent.id) {
    case "copywriter": color = "#00e0ff"; icon = "copywriter"; break;
    case "designer":   color = "#ff80ed"; icon = "designer"; break;
    case "analyst":    color = "#ffd166"; icon = "analyst"; break;
    case "manager":    color = "#06d6a0"; icon = "manager"; break;
    case "strategist": color = "#8b80ff"; icon = "strategist"; break;
  }
  agent.baseColor = color;
  agent.icon = icon;
  return { color, icon };
}

// === üß† –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞: –ø–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Ü–≤–µ—Ç–æ–≤ ===
async function finalizeBrainstorm(Graph, agents, summaryText, discussion) {
  try {
    // üü¢ –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∑–∞–≤–µ—Ä—à–∞—é—Ç —Ä–∞–±–æ—Ç—É (—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è done)
    agents.forEach(a => (a.status = "done"));
    Graph.nodeColor(colorByStatus);
    Graph.graphData(Graph.graphData());

    // —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–≤–µ—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω—ã–º
    setTimeout(() => {
      agents.forEach(a => (a.status = null)); // –≤–µ—Ä–Ω—ë—Ç baseColor
      Graph.graphData(Graph.graphData());
    }, 1000);

    // === üìä –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã" –≤ –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å ===
    // const output = document.getElementById("sp-brainstorm-output");
    // if (output) {
    //   output.style.display = "block"; // <‚Äî –¥–æ–±–∞–≤—å —Å—é–¥–∞
    //   const link = document.createElement("a");
    //   link.href = "#brainstorm-results-block";
    //   link.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã";
    //   link.className = "show-result-link";
    //   link.style.display = "block";
    //   link.style.marginTop = "12px";
    //   link.style.cursor = "pointer";
    //   link.onclick = (e) => {
    //     e.preventDefault();
    //     showBrainstormResults(summaryText, discussion);
    //   };
    //   output.appendChild(link);
    // }

    setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —à—Ç—É—Ä–º–∞:", err);
  }
}

// === üìã –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–ª–æ–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞ ===
function showBrainstormResults(summary, discussion) {
  let resultsBlock = document.getElementById("brainstorm-results-block");

  if (!resultsBlock) {
    resultsBlock = document.createElement("section");
    resultsBlock.id = "brainstorm-results-block";
    resultsBlock.className = "panel";
    resultsBlock.style.marginTop = "40px";
    resultsBlock.innerHTML = `
      <h2>üß† –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞</h2>
      <div id="brainstorm-discussion"></div>
      <div id="brainstorm-summary" style="margin-top:15px; font-weight:500;"></div>
    `;
    document.body.appendChild(resultsBlock);
  }

  const discEl = document.getElementById("brainstorm-discussion");
  const sumEl = document.getElementById("brainstorm-summary");

    // === –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–∏–∞–ª–æ–≥–∞ ===
  discEl.classList.add("markdown-body");
  discEl.innerHTML = discussion
    .map(d => `<div class="agent-block"><p><b>${d.agent}</b>:</p><div>${marked.parse(d.response)}</div></div>`)
    .join("");

  // === –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ ===
  sumEl.classList.add("markdown-body");
  sumEl.innerHTML = marked.parse(summary || "_(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)_");


  // –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –±–ª–æ–∫—É
  resultsBlock.scrollIntoView({ behavior: "smooth" });
}

  function showAgentResultBlock(agentName, resultMarkdown) {
  let block = document.getElementById("agent-results-block");

  if (!block) {
    block = document.createElement("section");
    block.id = "agent-results-block";
    block.className = "panel";
    block.style.marginTop = "40px";
    block.innerHTML = `
      <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≥–µ–Ω—Ç–∞</h2>
      <div id="agent-results-content" class="markdown-body"></div>
    `;
    document.body.appendChild(block);
  }

  const content = document.getElementById("agent-results-content");
  content.innerHTML = `
    <h3>${agentName}</h3>
    ${marked.parse(resultMarkdown)}
  `;

  // –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –±–ª–æ–∫—É
  block.scrollIntoView({ behavior: "smooth" });
}


// ------------------------------------------------------------------------
// üß± 11. –ü—Ä–∏–º–∏—Ç–∏–≤—ã –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∞
// ------------------------------------------------------------------------
function drawAgentIcon(iconType, node, ctx) {
  switch (iconType) {
    case "copywriter": // üë®‚Äçüíª –Ω–æ—É—Ç–±—É–∫
      ctx.beginPath();
      ctx.rect(node.x - 6, node.y, 12, 6);
      ctx.stroke();
      ctx.beginPath();
      ctx.moveTo(node.x - 5, node.y - 2);
      ctx.lineTo(node.x, node.y - 6);
      ctx.lineTo(node.x + 5, node.y - 2);
      ctx.stroke();
      break;
    case "designer": // üé® –ø–∞–ª–∏—Ç—Ä–∞
      ctx.beginPath();
      ctx.arc(node.x, node.y, 6, 0, 2 * Math.PI);
      ctx.stroke();
      ctx.beginPath();
      [ [-3,-2], [2,-3], [3,2], [-2,3] ].forEach(([dx,dy]) => {
        ctx.arc(node.x + dx, node.y + dy, 1, 0, 2 * Math.PI);
      });
      ctx.fill();
      break;
    case "analyst": // üß† –º–æ–∑–≥
      ctx.beginPath();
      ctx.arc(node.x - 3, node.y - 1, 3, 0, Math.PI * 2);
      ctx.arc(node.x + 3, node.y + 1, 3, 0, Math.PI * 2);
      ctx.stroke();
      break;
    case "manager": // ‚öôÔ∏è —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∞
      for (let i = 0; i < 8; i++) {
        const a = (i * Math.PI) / 4;
        const r1 = 3.5, r2 = 5.5;
        ctx.moveTo(node.x + r1 * Math.cos(a), node.y + r1 * Math.sin(a));
        ctx.lineTo(node.x + r2 * Math.cos(a), node.y + r2 * Math.sin(a));
      }
      ctx.stroke();
      ctx.beginPath();
      ctx.arc(node.x, node.y, 2.2, 0, 2 * Math.PI);
      ctx.fill();
      break;
    default: // üë§ –±–∞–∑–æ–≤—ã–π —Å–∏–ª—É—ç—Ç
      ctx.beginPath();
      ctx.arc(node.x, node.y - 5, 3, 0, 2 * Math.PI);
      ctx.fill();
      ctx.beginPath();
      ctx.moveTo(node.x - 5, node.y + 4);
      ctx.quadraticCurveTo(node.x, node.y + 8, node.x + 5, node.y + 4);
      ctx.stroke();
      break;
  }
}

// === üß† –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∞–≥–µ–Ω—Ç—É ===
async function assignTaskFromOffice(slug, task) {
  const statusBlock = document.querySelector("#sp-meta");
  const resultBox = document.querySelector("#sp-last-result");

  setSystemStatus("busy", "‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞...");
  if (statusBlock) statusBlock.innerHTML += `<div><b>‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...</b></div>`;
  if (resultBox) resultBox.innerHTML = `<div class="spinner"></div> –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...`;

  try {
    // üîπ –ê–≥–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–º–∏–≥–∞–Ω–∏–µ)
    window.__OfficeGraph__?.setAgentStatus(slug, "running");
    window.__OfficeGraph__?.refresh();

    const res = await fetch("/assign_task", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({ slug, task }),
    });

    const data = await res.json();
    if (!data.ok) throw new Error(data.error || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");

    // ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ –∏ –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å
    window.__OfficeGraph__?.setAgentStatus(slug, "done", data.result?.html, task);
    window.__OfficeGraph__?.refresh();

    if (statusBlock) {
      statusBlock.innerHTML = `
        <div>–¢–∏–ø: <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</b></div>
        <div>–ö–∞—Ç–∞–ª–æ–≥: <b>${currentNode?.folder || "‚Äî"}</b></div>
        <div>–°—Ç–∞—Ç—É—Å: <b>‚úÖ –ì–æ—Ç–æ–≤–æ</b></div>
      `;
    }

    if (resultBox) {
      resultBox.innerHTML = data.result?.html || data.result || "‚Äî";
      resultBox.scrollTop = resultBox.scrollHeight;
    }

    // üîó –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
    const showLink = document.getElementById("sp-show-result");
    if (showLink) {
      showLink.style.display = "inline-block";
      showLink.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç";
      showLink.onclick = (e) => {
        e.preventDefault();
        showAgentResultBlock(slug, data.result?.html || data.result || "‚Äî");
      };
    }

    setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
  } catch (err) {
    console.error(err);
    window.__OfficeGraph__?.setAgentStatus(slug, "error");
    window.__OfficeGraph__?.refresh();

    if (resultBox)
      resultBox.innerHTML = `<p class="error">‚ùå –û—à–∏–±–∫–∞: ${err.message}</p>`;
    
    setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏");
  }
}


// ========================================================================
// üß† –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É–∑–ª–∞ –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏
// ========================================================================
function fillSidepanel(node) {
  currentNode = node; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É–∑–µ–ª –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  const title = document.getElementById("sp-title");
  const meta  = document.getElementById("sp-meta");
  const last  = document.getElementById("sp-last");
  // const lastTask = document.getElementById("sp-last-task");
  const lastRes  = document.getElementById("sp-last-result");
  const actions = document.getElementById("sp-actions");
  const folderActions = document.getElementById("sp-folder-actions");
  const folderResults = document.getElementById("sp-folder-results");
  const sendBtn = document.getElementById("sp-send");
  const sendFolderBtn = document.getElementById("sp-folder-send");

  title.textContent = node.label || "–£–∑–µ–ª";
  title.dataset.slug = (node.type === "agent") ? node.id : "";

  meta.innerHTML = `
    <div>–¢–∏–ø: <b>${node.type === "folder" ? "–ö–∞—Ç–∞–ª–æ–≥" : "–°–æ—Ç—Ä—É–¥–Ω–∏–∫"}</b></div>
    <div>–ì—Ä—É–ø–ø–∞: <b>${node.folder || "‚Äî"}</b></div>
    ${node.type === "agent" ? `<div>–°—Ç–∞—Ç—É—Å: <span class="status ${node.status || "done"}">${node.status || "‚Äî"}</span></div>` : ""}
  `;

  const brainstormBox = document.getElementById("sp-brainstorm");

  if (node.type === "agent") {
    // ==== –û–¥–∏–Ω–æ—á–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ ====
    console.log('node',node)
    const t = node.last_task?.task || "‚Äî";
    const r = node.last_task?.result?.html || node.last_task?.result || "‚Äî";
    last.style.display = "block";
    lastRes.style.display = "block";
    brainstormBox.style.display = "none";
    // lastTask.innerHTML = marked.parse(`üß© –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞:\n\n${t}`);
    lastRes.innerHTML = r;
    const showLink = document.getElementById("sp-show-result");
    if (r && r.trim() && r !== "‚Äî") {
      showLink.style.display = "inline-block";
      showLink.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç";
      showLink.onclick = (e) => {
        e.preventDefault();
        showAgentResultBlock(node.label, r);
      };
    } else {
      showLink.style.display = "none";
    }
    // lastTask.textContent = `üß© –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞: ${t}`;
    
    actions.style.display = "flex";
    folderActions.style.display = "none";
    folderResults.style.display = "none";

    sendBtn.onclick = async () => {
      const task = (document.getElementById("sp-task")?.value || "").trim();
      if (!task) return alert("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É");
      await assignTaskFromOffice(node.id, task);
    };
  } 
  else if (node.type === "folder") {
    actions.style.display = "none";
    last.style.display = "none";
    folderActions.style.display = "flex";
    folderResults.style.display = "none";

    // üß† –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞
    // === –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–æ–≤ ===
    console.log('node.type',node.type,brainstormBox)
    brainstormBox.style.display = "flex";
    sendFolderBtn.onclick = async () => {
      const task = (document.getElementById("sp-folder-task")?.value || "").trim();
      if (!task) return alert("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞");
      await assignTaskToFolderFromOffice(node.folder, task);
    };

    const brainstormBtn = document.getElementById("sp-brainstorm-send");
    brainstormBtn.onclick = async () => {
      const topic = (document.getElementById("sp-brainstorm-topic")?.value || "").trim();
      if (!topic) return alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É —à—Ç—É—Ä–º–∞");
      await runBrainstormFromOffice(node.folder, topic);
    };
  }
  else {
    actions.style.display = "none";
    folderActions.style.display = "none";
    folderResults.style.display = "none";
    last.style.display = "none";
  }
}

// === üìã –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ ===
// === –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –æ–¥–Ω–∏–º –∞–≥–µ–Ω—Ç–æ–º ===
async function assignTaskFromOffice(slug, task) {
  const resultBox = document.querySelector("#sp-last-result");
  setSystemStatus("busy", "‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞...");
  if (resultBox) resultBox.innerHTML = `<div class="spinner"></div> –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...`;

  const Graph = window.__OfficeGraph__?.Graph;
  const data = Graph?.graphData();
  const node = data?.nodes.find(n => n.id === slug);

  try {
    // üü° –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "running" –∏ –≤–∫–ª—é—á–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é
    if (node) node.status = "running";
    Graph?.graphData(data);

    // üîÅ –≠—Ñ—Ñ–µ–∫—Ç –º–∏–≥–∞–Ω–∏—è, –ø–æ–∫–∞ –∞–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
    const pulseIntervalId = setInterval(() => {
      const n = data?.nodes.find(n => n.id === slug && n.status === "running");
      if (!n) return; // –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É–∂–µ —Å–Ω—è—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
      Graph.graphData(data);
      setTimeout(() => Graph.graphData(data), 300);
    }, 400);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –∞–≥–µ–Ω—Ç—É
    const res = await fetch("/assign_task", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({ slug, task }),
    });
    const dataRes = await res.json();
    if (!dataRes.ok) throw new Error(dataRes.error || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");

    // üü¢ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é –∏ —Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å "done"
    clearInterval(pulseIntervalId);
    if (node) node.status = "done";
    Graph.graphData(data);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (resultBox) {
      resultBox.innerHTML = dataRes.result?.html || dataRes.result || "‚Äî";
      resultBox.scrollTop = resultBox.scrollHeight;
    }

    // –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
    const showLink = document.getElementById("sp-show-result");
    if (showLink) {
      showLink.style.display = "inline-block";
      showLink.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç";
      showLink.onclick = (e) => {
        e.preventDefault();
        showAgentResultBlock(slug, dataRes.result?.html || dataRes.result || "‚Äî");
      };
    }

    // üîÑ –ß–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–≤–µ—Ç –∏ —É–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
    setTimeout(() => {
      if (node) node.status = null;
      if (window.__OfficeGraph__) window.__OfficeGraph__.selectedNodeId = null;
      Graph.graphData(data);
    }, 1000);

    setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
  } catch (err) {
    console.error('[office] assignTaskFromOffice error:', err);
    // ‚ùå –û—à–∏–±–∫–∞ ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é –∏ –∫—Ä–∞—Å–∏–º –≤ error
    if (node) node.status = "error";
    clearInterval(pulseIntervalId);
    Graph.graphData(data);
    if (resultBox) resultBox.innerHTML = `<p class="error">‚ùå –û—à–∏–±–∫–∞: ${err.message}</p>`;
    setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏");
  }
}



async function assignTaskToFolderFromOffice(folder, task) {
  const folderResults = document.getElementById("sp-folder-results");
  folderResults.style.display = "block";
  folderResults.innerHTML = `<div class="spinner"></div> ‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ <b>${folder}</b>...`;

  setSystemStatus("busy", `‚öôÔ∏è –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ "${folder}"`);

  const Graph = window.__OfficeGraph__?.Graph;
  const data = Graph?.graphData();
  if (!Graph || !data) return;

  // === üü° 1. –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è ‚Äî –º–∏–≥–∞–Ω–∏–µ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞ ===
  const agents = data.nodes.filter(n => n.type === "agent" && n.folder === folder);
  agents.forEach(a => {
    a.status = "running";
    a._pulsePhase = Date.now();
  });
  Graph.graphData(data);

  // üîÑ –ê–Ω–∏–º–∞—Ü–∏—è: –∫–∞–∫ –≤ –º–æ–∑–≥–æ–≤–æ–º —à—Ç—É—Ä–º–µ (–ø—É–ª—å—Å–∏—Ä—É—é—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
  const pulseIntervalId = setInterval(() => {
    const active = agents.filter(a => a.status === "running");
    if (active.length < 2) return;
    const a1 = active[Math.floor(Math.random() * active.length)];
    const a2 = active[Math.floor(Math.random() * active.length)];
    if (a1.id === a2.id) return;
    Graph.graphData(data);
    // —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 300–º—Å
    setTimeout(() => {
      Graph.graphData(data);
    }, 300);
  }, 400);

  try {
    // === üß† 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä ===
    const res = await fetch("/assign_task_folder", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({ folder, task }),
    });
    const json = await res.json();
    if (!json.ok) throw new Error(json.error || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");

    // === üß© 3. –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
    let html = `<h4>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4><ul style="list-style:none; padding-left:0;">`;
    const discussion = [];

    for (const { agent, result } of json.results) {
      html += `
      <li style="margin:6px 0; padding:6px; border-bottom:1px solid rgba(255,255,255,0.1)">
        <b>${agent}</b>:
        <div class="markdown-body">${marked.parse(result?.html || result || "‚Äî")}</div>
      </li>`;
      folderResults.classList.add("markdown-body");
      const node = data.nodes.find(n => n.id === agent);
      if (node) {
        node.status = "done";
        node.last_task = { task, result };
      }
      discussion.push({ agent, response: result?.html || result || "‚Äî" });
    }
    html += `</ul>`;

    // === üìä –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç" ===
    html += `
      <a href="#folder-results-block" id="folder-results-link"
         style="display:block; margin-top:10px; color:#00b4ff; cursor:pointer;">
        üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      </a>`;

    folderResults.innerHTML = html;
    setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");

    // üü¢ 4. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞
    clearInterval(pulseIntervalId);
    agents.forEach(a => {
      a.status = "done";
      a._pulsePhase = null;
    });
    Graph.graphData(data);

    // —á–µ—Ä–µ–∑ –ø–∞—É–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ü–≤–µ—Ç–∞
    setTimeout(() => {
      agents.forEach(a => (a.status = null));
      Graph.graphData(data);
    }, 1000);

    // === üìé –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –±–ª–æ–∫ –≤–Ω–∏–∑—É ===
    document.getElementById("folder-results-link").onclick = (e) => {
      e.preventDefault();
      showFolderResultsBlock(folder, task, discussion);
    };

  } catch (err) {
    console.error(err);
    clearInterval(pulseIntervalId);
    folderResults.innerHTML = `<p class="error">‚ùå –û—à–∏–±–∫–∞: ${err.message}</p>`;
    setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –∫–∞—Ç–∞–ª–æ–≥–∞");
  }
}


function showFolderResultsBlock(folder, task, discussion) {
  let block = document.getElementById("folder-results-block");

  if (!block) {
    block = document.createElement("section");
    block.id = "folder-results-block";
    block.className = "panel";
    block.style.marginTop = "40px";
    block.innerHTML = `
      <h2>üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ "${folder}"</h2>
      <p class="text-dim">üß© –ó–∞–¥–∞—á–∞: ${task}</p>
      <div id="folder-discussion" class="markdown-body"></div>
    `;
    document.body.appendChild(block);
  }

  const content = document.getElementById("folder-discussion");
  content.innerHTML = discussion
    .map(d => `<div class="agent-block"><p><b>${d.agent}</b>:</p><div>${marked.parse(d.response)}</div></div>`)
    .join("");

  block.scrollIntoView({ behavior: "smooth" });
}


// === üìã –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ ===
function showAgentResultBlock(agentName, resultMarkdown) {
  // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  let block = document.getElementById("agent-results-block");

  if (!block) {
    // –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º
    block = document.createElement("section");
    block.id = "agent-results-block";
    block.className = "panel";
    block.style.marginTop = "40px";
    block.innerHTML = `
      <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≥–µ–Ω—Ç–∞</h2>
      <div id="agent-results-content" class="markdown-body"></div>
    `;
    document.body.appendChild(block);
  }

  // –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  const content = document.getElementById("agent-results-content");
  content.innerHTML = `
    <h3>${agentName}</h3>
    ${marked.parse(resultMarkdown || "_(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)_")}
  `;

  // –ø–ª–∞–≤–Ω–æ —Å–∫—Ä–æ–ª–ª–∏–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
  block.scrollIntoView({ behavior: "smooth" });

  // –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è (fade-in)
  block.style.opacity = "0";
  block.style.transition = "opacity 0.8s ease";
  requestAnimationFrame(() => (block.style.opacity = "1"));
}

// ================== CAMERA PIN ‚Äî —Ñ–∏–∫—Å–∞—Ü–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã ==================
function getGraph() { return window.__OfficeGraph__?.Graph || null; }
function now() { return (typeof performance !== 'undefined' ? performance.now() : Date.now()); }

window.__CAMERA_PIN__ = {
  untilTs: 0,
  target: null,   // {x,y,z,dist}
  lastMs: 0
};

function isCameraPinned() {
  return window.__CAMERA_PIN__.untilTs > now();
}

function setControlsEnabled(enabled) {
  const G = getGraph();
  if (!G || typeof G.controls !== 'function') return;
  const ctr = G.controls();
  if (!ctr) return;
  ctr.enableZoom   = enabled;
  ctr.enablePan    = enabled;
  // –≤—Ä–∞—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≤–∫–ª—é—á—ë–Ω–Ω—ã–º ‚Äî –Ω–∞ –≤–∫—É—Å:
  // ctr.enableRotate = enabled;
}

function reapplyCamera() {
  const G = getGraph();
  if (!G || !window.__CAMERA_PIN__.target) return;

  const t = window.__CAMERA_PIN__.target;
  const is3D = typeof G.cameraPosition === 'function';

  if (is3D) {
    // –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ —Å—Ç–∞–≤–∏–º –∫–∞–º–µ—Ä—É —Ç—É–¥–∞ –∂–µ (duration = 0)
    G.cameraPosition(
      { x: t.x, y: t.y, z: t.z + t.dist },
      { x: t.x, y: t.y, z: t.z },
      0
    );
  } else {
    if (typeof G.centerAt === 'function')  G.centerAt(t.x, t.y, 0);
    if (typeof G.zoom === 'function')      G.zoom(t.zoom || 1.5, 0);
  }
}

function startCameraPin(durationMs = 2000) {
  window.__CAMERA_PIN__.untilTs = now() + durationMs;
  setControlsEnabled(false);
  // RAF-–ø–µ—Ç–ª—è: –ø–æ–∫–∞ –ø–∏–Ω –∞–∫—Ç–∏–≤–µ–Ω, –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –º—è–≥–∫–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–º–µ—Ä—É
  if (!window.__CAMERA_PIN__.rafId) {
    const loop = () => {
      if (isCameraPinned()) {
        reapplyCamera();
        window.__CAMERA_PIN__.rafId = requestAnimationFrame(loop);
      } else {
        cancelAnimationFrame(window.__CAMERA_PIN__.rafId);
        window.__CAMERA_PIN__.rafId = null;
        setControlsEnabled(true);
      }
    };
    window.__CAMERA_PIN__.rafId = requestAnimationFrame(loop);
  }
}

// –ü–∞—Ç—á–∏–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã: –µ—Å–ª–∏ –ø–∏–Ω –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∫–∞–º–µ—Ä—É –æ–±—Ä–∞—Ç–Ω–æ
(function patchGraphMethodsOnce(){
  if (window.__CAMERA_PIN__.patched) return;
  const G = getGraph();
  if (!G) return;

  const wrap = (methodName) => {
    if (typeof G[methodName] !== 'function') return;
    const orig = G[methodName].bind(G);
    G[methodName] = function(...args) {
      const ret = orig(...args);
      if (isCameraPinned()) {
        // –ø–æ—Å–ª–µ –ª—é–±–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–º–µ—Ä—É
        Promise.resolve().then(reapplyCamera);
      }
      return ret;
    };
  };

  // graphData/zoomToFit/fitToScene/centerAt/zoom ‚Äî –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
  ['graphData','zoomToFit','fitToScene','centerAt','zoom'].forEach(wrap);
  window.__CAMERA_PIN__.patched = true;
})();


// ========================================================================
// üåç –≠–∫—Å–ø–æ—Ä—Ç fillSidepanel –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ core.js / –≥–ª–æ–±–∞–ª—å–Ω–æ
// ========================================================================
window.fillSidepanel = fillSidepanel;


// ------------------------------------------------------------------------
// üöÄ 12. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
// ------------------------------------------------------------------------
document.addEventListener("DOMContentLoaded", () => {
  if (window.lucide) lucide.createIcons();
  AIManager.init();
  refreshFolderSelect();
  loadOfficeGraph();
});


// ========================================================================
// üß© –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è inline-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
// ========================================================================
window.AIManager = AIManager;
window.toggleFolder = AIManager.toggleFolder;
window.deleteAgent = AIManager.deleteAgent;
window.assignTask = AIManager.assignTask;
window.assignTaskToFolder = AIManager.assignTaskToFolder;
window.setSystemStatus = AIManager.setSystemStatus;
