// ========================================================================
// üß© CORE MODULE ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
// ========================================================================

const AIManager = (() => {
  const qs  = s => document.querySelector(s);
  const qsa = s => document.querySelectorAll(s);

  // --- üß† –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–π ---
  const showMessage = (text, type = "info") => {
    const msgBox = qs("#folderMessage");
    if (!msgBox) return;
    msgBox.textContent = text;
    msgBox.className = type;
    setTimeout(() => (msgBox.textContent = ""), 1500);
  };

  // === API wrapper ===
  async function api(url, options = {}) {
    try {
      const res = await fetch(url, options);
      const text = await res.text();
      if (!res.ok) throw new Error(`${res.status}: ${text.slice(0,100)}`);
      try {
        return JSON.parse(text);
      } catch {
        return text;
      }
    } catch (err) {
      console.error("API error:", err);
      setSystemStatus("error", err.message);
      throw err;
    }
  }

  // --- üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ ---
  const handleCreateFolder = async e => {
    e.preventDefault();
    const input = qs("#folderName");
    const name = input.value.trim();
    if (!name) return showMessage("‚ùó–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–∞—Ç–∞–ª–æ–≥–∞", "warn");

    const res = await fetch("/create_folder", {
      method: "POST",
      body: new URLSearchParams({ name }),
      headers: { ...authHeaders(), Accept: "application/json" }
    });
    const data = await res.json();

    if (data.ok) {
      showMessage(`‚úÖ –ö–∞—Ç–∞–ª–æ–≥ '${name}' —Å–æ–∑–¥–∞–Ω`);
      renderFolder(name);
      addFolderToSelect(name);
      input.value = "";
    } else if (data.error === "exists") {
      showMessage("‚ö†Ô∏è –¢–∞–∫–æ–π –∫–∞—Ç–∞–ª–æ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", "warn");
    } else {
      showMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞", "error");
    }
  };

  // --- üìÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ —Å–µ–ª–µ–∫—Ç ---
  const addFolderToSelect = (name) => {
    const select = qs("#folder-select");
    if (!select) return;
    if ([...select.options].some(o => o.value === name)) return;
    const opt = document.createElement("option");
    opt.value = name;
    opt.textContent = name;
    select.appendChild(opt);
  };

  // --- üé® –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ---
  const renderFolder = (name) => {
    const container = qs("#folders-container");
    if (!container || qs(`#folder-${name}`)) return;

    const html = `
      <section id="folder-${name}" class="folder" data-folder="${name}">
        <div class="folder-header">
          <h2 class="folder-title" onclick="AIManager.toggleFolder('${name}')">üìÇ ${name}</h2>
          <i data-lucide="rocket"></i> 
          <div class="folder-actions">
            <button class="delete-folder-btn" onclick="AIManager.deleteFolder('${name}')">
              <i data-lucide="trash-2"></i> –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>
        </div>
        <div class="task-box hidden" id="task-box-${name}">
          <textarea placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞ '${name}'..." id="task-input-${name}"></textarea>
          <button onclick="AIManager.assignTaskToFolder('${name}')">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </div>
        <ul class="agents-list" id="agents-${name}" style="display:none;">
          <li><em>–ü–æ–∫–∞ –ø—É—Å—Ç–æ</em></li>
        </ul>
      </section>`;
    container.insertAdjacentHTML("afterbegin", html);
  };

  window.toggleTaskBox = (folder) => {
    const box = document.querySelector(`#task-box-${folder}`);
    if (box) box.classList.toggle("hidden");
  };

  // === –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ ===
// === –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ ===
  async function deleteFolder(folderName) {
     const row = document.querySelector(`.folder[data-folder="${folderName}"]`);
  if (!row) {
    console.warn(`‚ö†Ô∏è –ê–≥–µ–Ω—Ç ${folderName} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM`);
    return;
  }

  // –µ—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ ‚Äî –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º
  if (row.querySelector(".confirm-delete")) return;

  // —Å–æ–∑–¥–∞—ë–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π confirm-–±–ª–æ–∫
  const confirmBox = document.createElement("div");
  confirmBox.className = "confirm-delete";
  confirmBox.innerHTML = `
    <span style="margin-right:8px;">–£–¥–∞–ª–∏—Ç—å?</span>
    <button class="yes">–î–∞</button>
    <button class="no">–û—Ç–º–µ–Ω–∞</button>
  `;
  confirmBox.style.display = "inline-flex";
  confirmBox.style.gap = "6px";
  confirmBox.style.marginLeft = "10px";
  confirmBox.style.alignItems = "center";

  row.appendChild(confirmBox);

  confirmBox.querySelector(".yes").onclick = async () => {
    try {
      const res = await fetch("/delete_folder", {
        method: "POST",
        headers: { ...authHeaders(), Accept: "application/json" },
        body: new URLSearchParams({ name: folderName })
      });

      const data = await res.json();

      if (data.ok) {
        showMessage(`üóëÔ∏è –ö–∞—Ç–∞–ª–æ–≥ '${folderName}' —É–¥–∞–ª—ë–Ω`);
        document.querySelector(`#folder-${folderName}`)?.remove();
        setSystemStatus("active", `üßπ –ö–∞—Ç–∞–ª–æ–≥ '${folderName}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω`);
      } 
      else if (data.error === "not_empty") {
        // ‚úÖ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showMessage(`‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ '${folderName}' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª—ë–Ω ‚Äî –æ–Ω –Ω–µ –ø—É—Å—Ç.`, "warn");
        setSystemStatus("error", `‚ùó –ö–∞—Ç–∞–ª–æ–≥ '${folderName}' —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤`);
      }
      else {
        showMessage(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: ${data.error || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`, "error");
        setSystemStatus("error", `–û—à–∏–±–∫–∞: ${data.error || res.statusText}`);
      }
    } 
    catch (err) {
      console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", err);
      showMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞", "error");
      setSystemStatus("error", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞");
    }
  };


  confirmBox.querySelector(".no").onclick = () => confirmBox.remove();
  }



  

  // --- ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ---
  const handleCreateAgent = async (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    try {
      const res = await fetch("/create_agent", { method: "POST", body: formData , headers: { ...authHeaders(), Accept: "application/json" }});
      const data = await res.json();
      if (!data.ok) throw new Error(data.error || "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è");

      const folder = formData.get("folder") || "root";
      const name   = formData.get("name");
      const slug   = name.toLowerCase().replace(/[^a-z0-9_-]/g, "_");
      addAgentToFolder(folder, name, slug);
      showMessage(`‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ '${name}' —Å–æ–∑–¥–∞–Ω`);
      form.reset();
    } catch (err) {
      showMessage(`‚ùå ${err.message}`, "error");
    }
  };

  const addAgentToFolder = (folder, name, slug) => {
    const section = document.querySelector(`#folder-${folder} ul`);
    if (!section) return;
    section.insertAdjacentHTML("beforeend", `
      <li>
        ü§ñ <a href="/agent/${slug}" target="_blank">${name}</a>
        <button class="icon-btn delete-agent-btn" onclick="AIManager.deleteAgent('${slug}', '${folder}')">
          <i data-lucide="trash-2"></i>
        </button>
      </li>`);
    if (window.lucide) lucide.createIcons();
  };

  // --- üóë –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–±–µ–∑ alert) ---
 // --- üóë –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –±–µ–∑ alert) ---
const deleteAgent = async (slug) => {
  const row = document.querySelector(`.agent-row[data-slug="${slug}"]`);
  if (!row) {
    console.warn(`‚ö†Ô∏è –ê–≥–µ–Ω—Ç ${slug} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }

  // –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—É–±–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π
  if (row.querySelector(".confirm-delete")) return;

  // —Å–æ–∑–¥–∞—ë–º –º–∏–Ω–∏ confirm –ø—Ä—è–º–æ —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π
  const confirmBox = document.createElement("div");
  confirmBox.className = "confirm-delete";
  confirmBox.innerHTML = `
    <span>–£–¥–∞–ª–∏—Ç—å?</span>
    <button class="yes">–î–∞</button>
    <button class="no">–û—Ç–º–µ–Ω–∞</button>
  `;
  confirmBox.style.display = "inline-flex";
  confirmBox.style.gap = "5px";
  confirmBox.style.marginLeft = "10px";
  row.appendChild(confirmBox);

  // === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
  confirmBox.querySelector(".yes").onclick = async () => {
    try {
      const res = await fetch("/delete_agent", {
        method: "POST",
        headers: { ...authHeaders(), Accept: "application/json" },
        body: new URLSearchParams({ slug })
      });
      const data = await res.json();

      if (res.ok && data.ok) {
        row.style.transition = "opacity 0.3s ease, transform 0.3s ease";
        row.style.opacity = "0";
        row.style.transform = "translateX(-15px)";
        setTimeout(() => row.remove(), 300);
        if (typeof showMessage === "function") showMessage(`üóëÔ∏è –£–¥–∞–ª—ë–Ω '${slug}'`);
        setSystemStatus("active", `üßπ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ '${slug}' —É–¥–∞–ª—ë–Ω`);
      } else {
        console.error(data.error || data.detail);
        showMessage(`‚ùå ${data.error || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è"}`, "error");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", err);
      showMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", "error");
    }
  };

  confirmBox.querySelector(".no").onclick = () => confirmBox.remove();
};

 // ===============================
  // 5. –ü–æ—Ä—É—á–∏—Ç—å –∑–∞–¥–∞—á—É –∞–≥–µ–Ω—Ç—É
  // ===============================
const assignTask = async (slug) => {
    const input = document.getElementById(`task-${slug}`);
    const task = input?.value.trim();
    if (!task) return alert("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É");

    const card = document.querySelector(`#agent-card-${slug}`);
    const status = card.querySelector(".agent-status");
    const resultBox = card.querySelector(".result");
    const button = card.querySelector("button");

    // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
    setSystemStatus("busy", "‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞...");
    button.disabled = true;
    status.textContent = "–°—Ç–∞—Ç—É—Å: ‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...";
    status.className = "agent-status running";
    resultBox.innerHTML = `<div class="spinner"></div> –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...`;

    try {
      const res = await fetch("/assign_task", {
        method: "POST",
        body: new URLSearchParams({ slug, task }),
        headers: { ...authHeaders(), Accept: "application/json" }
      });
      const data = await res.json();

      if (!data.ok) throw new Error(data.error || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");

      // üü¢ –£—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
      status.textContent = "–°—Ç–∞—Ç—É—Å: ‚úÖ –ì–æ—Ç–æ–≤–æ";
      status.className = "agent-status done";
      resultBox.innerHTML = data.result?.html || data.result || "‚Äî";
      taskBox.textContent = `üß© –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞: ${task}`;
      resultBox.style.display = "block";

      // –í–∏–∑—É–∞–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
      card.classList.add("done");
      setTimeout(() => card.classList.remove("done"), 1500);
      setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
    } catch (err) {
      console.error(err);
      status.textContent = "–°—Ç–∞—Ç—É—Å: ‚ùå –û—à–∏–±–∫–∞";
      status.className = "agent-status error";
      resultBox.textContent = err.message || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏";
      setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏");
    } finally {
      button.disabled = false;
    }
  }



// 6. –ü–æ—Ä—É—á–∏—Ç—å –∑–∞–¥–∞—á—É –≤—Å–µ–º—É –∫–∞—Ç–∞–ª–æ–≥—É (—Å –∞–Ω–∏–º–∞—Ü–∏–µ–π)
// ===============================
// === üß© –ü–æ—Ä—É—á–∏—Ç—å –∑–∞–¥–∞—á—É –≤—Å–µ–º—É –∫–∞—Ç–∞–ª–æ–≥—É ===
async function assignTaskToFolder(folder, taskText) {
  const input = document.getElementById(`task-input-${folder}`);
  const task = taskText || input?.value?.trim();
  if (!task) return alert("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞");

  // üß© –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å", –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
  const button = input?.nextElementSibling || document.querySelector(`#folder-${folder} .assign-btn`);
  const originalText = button ? button.textContent : null;

  if (button) {
    button.disabled = true;
    button.textContent = "‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...";
  }

  setSystemStatus("active", `üß© –ö–∞—Ç–∞–ª–æ–≥ '${folder}' –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á—É`);

  try {
    const res = await fetch("/assign_task_to_folder", {
      method: "POST",
      headers: { ...authHeaders(), Accept: "application/json" },
      body: new URLSearchParams({ folder, task })
    });
    const data = await res.json();
    if (!res.ok || data.ok === false) {
      showMessage(`‚ùå –û—à–∏–±–∫–∞: ${data.error || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`, "error");
      setSystemStatus("error", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –∫–∞—Ç–∞–ª–æ–≥—É");
      return;
    }
    else{
      // üß† –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤—Å–µ–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
      setSystemStatus("active", `‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ "${folder}"`);
  
      addShowResultButton(folder,data);

      setTimeout(() => {
        setSystemStatus("active", "üß© –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
      }, 2000);
    }


  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ assignTaskToFolder:", err);
    showMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –∫–∞—Ç–∞–ª–æ–≥—É", "error");
    setSystemStatus("error", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –∫–∞—Ç–∞–ª–æ–≥—É");
  } finally {
    if (button) {
      button.disabled = false;
      button.textContent = originalText || "–û—Ç–ø—Ä–∞–≤–∏—Ç—å";
    }
  }
}

async function addShowResultButton(folder,data) {
  console.log('addShowResultButton')
  // === –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥ task-box ===
    const box = document.getElementById(`task-box-${folder}`);
    if (box) {
      // —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —É–∂–µ –±—ã–ª–æ
      const oldResult = box.querySelector(".task-result-block");
      if (oldResult) oldResult.remove();

      // —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –±–ª–æ–∫
      const resultBlock = document.createElement("div");
      resultBlock.className = "task-result-block";
      resultBlock.innerHTML = `
        <span class="task-done-text">‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞</span>
        <button class="btn-mini show-results-btn">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç</button>
      `;
      resultBlock.style.marginTop = "8px";
      resultBlock.style.display = "flex";
      resultBlock.style.alignItems = "center";
      resultBlock.style.gap = "8px";

      // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —ç–ª–µ–º–µ–Ω—Ç
      resultBlock.dataset.results = JSON.stringify(data.results);

      // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏
      resultBlock.querySelector(".show-results-btn").onclick = () => showResultsModal(data.results);

      box.appendChild(resultBlock);
    }
  }

function showResultsModal(results) {
  const modal = document.getElementById("results-modal");
  const content = document.getElementById("results-content");
  const closeBtn = document.getElementById("close-results-modal");
  if (!modal || !content) return;

  content.innerHTML = results.map(r => {
    const name = r.agent || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≥–µ–Ω—Ç";
    const raw = r.result?.html || r.result?.markdown || r.result || r.error || "‚Äî";
    const safeText = typeof raw === "string" ? raw.trim() : JSON.stringify(raw, null, 2);
    const rendered = safeText.startsWith("<")
      ? safeText
      : marked.parse(safeText); // Markdown ‚Üí HTML –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    return `
      <div class="result-agent-block">
        <h4>ü§ñ ${name}</h4>
        <div class="markdown-body">${rendered}</div>
      </div>
    `;
  }).join("");


  modal.style.display = "flex";
  closeBtn.onclick = () => modal.style.display = "none";
  modal.onclick = (e) => { if (e.target === modal) modal.style.display = "none"; };
}





  // --- üìÇ –†–∞—Å–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ (–∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤) ---
 // === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ ===
async function toggleFolder(folderName) {
  // –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
  const safeId = `folder-${folderName}`;
  const box = document.getElementById(safeId);
  if (!box) {
    console.warn(`‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ ${folderName} –Ω–µ –Ω–∞–π–¥–µ–Ω (id="${safeId}")`);
    return;
  }

  // –ò—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤
  let listEl = box.querySelector(".folder-agents");
  if (!listEl) {
    listEl = document.createElement("div");
    listEl.className = "folder-agents";
    listEl.style.marginLeft = "15px";
    box.appendChild(listEl);
  }

  const expanded = box.getAttribute("data-expanded") === "1";

  if (expanded) {
    // —Å–≤–µ—Ä–Ω—É—Ç—å
    listEl.innerHTML = "";
    box.setAttribute("data-expanded", "0");
    return;
  }

  // —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å
  try {
    const res = await fetch(`/folder/${encodeURIComponent(folderName)}`,{headers: { ...authHeaders(), Accept: "application/json" }});
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const agents = await res.json();

    if (!Array.isArray(agents) || agents.length === 0) {
      listEl.innerHTML = `<div class="muted">–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>`;
    } else {
      listEl.innerHTML = agents.map(a => `
        <div class="agent-row" data-slug="${a.slug}">
          <a href="/agent/${a.slug}" class="agent-name">${a.name || a.slug}</a>
          <button class="btn-mini" onclick="AIManager.deleteAgent('${a.slug}')">–£–¥–∞–ª–∏—Ç—å</button>
        </div>
      `).join("");
      
    }

    box.setAttribute("data-expanded", "1");
  } catch (e) {
    console.error("toggleFolder error:", e);
    listEl.innerHTML = `<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>`;
  }
}

// document.getElementById("logoutBtn").onclick = () => {
//   localStorage.removeItem("token");
//   window.location.href = "/login";
// };

// üëá —á—Ç–æ–±—ã —Å—Ç–∞—Ä—ã–µ inline onclick –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å
  window.AIManager = window.AIManager || {};
  window.AIManager.deleteFolder = deleteFolder;
  window.AIManager.toggleFolder = toggleFolder;
  window.AIManager.assignTask = assignTask;
  window.AIManager.assignTaskToFolder = assignTaskToFolder;
  console.log("‚úÖ AIManager.deleteAgent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
  console.log("‚úÖ AIManager.toggleFolder –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");



  const init = () => {
    qs("#folderForm")?.addEventListener("submit", handleCreateFolder);
  };

  return { init, toggleFolder, assignTask, assignTaskToFolder,  deleteFolder, deleteAgent, setSystemStatus };
})();


// üëá –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ
// window.refreshFolderSelect = refreshFolderSelect;

// ========================================================================
// üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
// ========================================================================
document.addEventListener("DOMContentLoaded", () => {
  const modal     = document.getElementById("agent-modal");
  const openBtn   = document.getElementById("open-agent-modal");
  const closeBtn  = document.getElementById("close-agent-modal");
  const form      = document.getElementById("create-agent-form");
  const nameInput = document.getElementById("agent-name");
  const errorBox  = document.getElementById("agent-name-error");
  const msgBox    = document.getElementById("agent-message");

  if (!modal || !openBtn) return; // –µ—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ—Ç –º–æ–¥–∞–ª–∫–∏

  // --- –û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ ---
  openBtn.addEventListener("click", () => {
    modal.style.display = "flex";
    refreshFolderSelect();
  });

  // --- –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ ---
  closeBtn?.addEventListener("click", closeModal);
  modal.addEventListener("click", (e) => {
    if (e.target === modal) closeModal();
  });

  function closeModal() {
    modal.style.display = "none";
    form.reset();
    clearError();
    msgBox.style.display = "none";
  }

  // --- –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ ---
  nameInput.addEventListener("input", clearError);

  function showError(msg) {
    nameInput.classList.add("input-error");
    errorBox.textContent = msg;
  }

  function clearError() {
    nameInput.classList.remove("input-error");
    errorBox.textContent = "";
  }

  // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ ---
  async function agentExists(name) {
    try {
      const res = await fetch("/agents");
      if (!res.ok) return false;
      const agents = await res.json();
      return agents.some(a => a.name.toLowerCase() === name.toLowerCase());
    } catch {
      return false;
    }
  }

  // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã ---
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    clearError();
    msgBox.style.display = "none";
    msgBox.className = "form-message";

    const formData = new FormData(form);
    const name = formData.get("name").trim();
    const folder = formData.get("folder");

    const biasSlider = document.getElementById("team-bias");
    if (biasSlider) {
      formData.append("team_bias", biasSlider.value);
    }

    if (!name) {
      showError("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
      return;
    }

    // üîπ –ë—ã—Å—Ç—Ä–∞—è –ª–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    const existing = document.querySelectorAll(".agent-card h2");
    if ([...existing].some(h2 => h2.textContent.trim().toLowerCase() === name.toLowerCase())) {
      showError("‚ö†Ô∏è –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ –µ—Å—Ç—å");
      return;
    }

    // üîπ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    try {
      const res = await fetch("/create_agent", { method: "POST", body: formData,headers: { ...authHeaders(), Accept: "application/json" } });
      const data = await res.json();

      if (!data.ok) {
        msgBox.textContent = data.error || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏";
        msgBox.classList.add("error");
        msgBox.style.display = "block";
        return;
      }

      msgBox.textContent = `‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ "${name}" —Å–æ–∑–¥–∞–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ "${folder}"`;
      msgBox.classList.add("success");
      msgBox.style.display = "block";

      form.reset();
      await AIManager.toggleFolder(folder);

      setTimeout(closeModal, 1500);
    } catch (err) {
      msgBox.textContent = "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É";
      msgBox.classList.add("error");
      msgBox.style.display = "block";
    }
  });

  
});

// ==========================================================
// üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// ==========================================================
document.addEventListener("DOMContentLoaded", async () => {
  const token = localStorage.getItem("token");
  if (!token) {
    window.location.href = "/login";
    return;
  }

  try {
    const res = await fetch("/folders", {
      headers: {
        "Authorization": `Bearer ${token}`,
        "Accept": "application/json"
      }
    });

    if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ ${res.status}`);
    const folders = await res.json();

    console.log("üìÇ –ö–∞—Ç–∞–ª–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã:", folders);

    const container = document.getElementById("folders-container");
    if (!container) return;

    container.innerHTML = ""; // –æ—á–∏—Å—Ç–∫–∞

    // –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞—ë–º –±–ª–æ–∫
    folders.forEach(folder => {
      const html = `
        <section id="folder-${folder}" class="folder" data-folder="${folder}">
          <div class="folder-header">
            <div class="left-side">
              <i data-lucide="folder"></i>
              <h2 class="folder-title" onclick="AIManager.toggleFolder('${folder}')">${folder}</h2>
            </div>
            <div class="right-side">
              <div class="folder-actions">
                <button class="delete-folder-btn" onclick="AIManager.deleteFolder('${folder}')">
                  <i data-lucide="trash-2"></i>
                  <span>–£–¥–∞–ª–∏—Ç—å</span>
                </button>
              </div>
            </div>
          </div>

          <div class="task-box hidden" id="task-box-${folder}">
            <textarea id="task-input-${folder}" placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ '${folder}'..."></textarea>
            <button onclick="AIManager.assignTaskToFolder('${folder}')">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </div>

          <ul class="agents-list" id="agents-${folder}" style="display:none;">
            <li><em>–ü–æ–∫–∞ –ø—É—Å—Ç–æ</em></li>
          </ul>
        </section>
      `;

      container.insertAdjacentHTML("beforeend", html);
    });

    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å –∏–∫–æ–Ω–∫–∏ lucide
    if (window.lucide) lucide.createIcons();

  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:", err);
  }
});


// ========================================================================
// üìÅ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ (—Ä—è–¥–æ–º —Å "–°–æ–∑–¥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
// ========================================================================
document.addEventListener("DOMContentLoaded", () => {
  const folderBtn = document.getElementById("open-folder-modal");
  if (!folderBtn) return;

  folderBtn.addEventListener("click", async () => {
    const name = prompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞:");
    if (!name) return;

    try {
      const res = await fetch("/create_folder", {
        method: "POST",
        headers: { ...authHeaders(), Accept: "application/json" },
        body: new URLSearchParams({ name }),
      });

      const data = await res.json();
      if (data.ok) {
        alert(`‚úÖ –ö–∞—Ç–∞–ª–æ–≥ '${name}' —Å–æ–∑–¥–∞–Ω`);
        if (typeof refreshFolderSelect === "function") await refreshFolderSelect();
      } else if (data.error === "exists") {
        alert(`‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ '${name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      } else {
        alert(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏: ${data.error || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`);
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞:", err);
      alert("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º");
    }
  });
});


// ========================================================================
// üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã (–¥–ª—è office.js –∏ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π)
// ========================================================================

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
window.refreshFolderSelect = async function refreshFolderSelect() {
  try {
    const token = localStorage.getItem("token");
    const headers = token
      ? { "Authorization": `Bearer ${token}`, "Accept": "application/json" }
      : { "Accept": "application/json" };

    const res = await fetch("/folders", { headers });
    if (!res.ok) {
      const text = await res.text();
      console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:", res.status, text);
      return;
    }

    const folders = await res.json();
    const select = document.getElementById("folder-select");
    if (!select) return;
    select.innerHTML = folders.map(f => `<option value="${f}">${f}</option>`).join("");

  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:", e);
  }
};




// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º buildGraphData, —á—Ç–æ–±—ã office.js –º–æ–≥ —Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ
window.buildGraphData = function buildGraphData(agents) {
  const folderSet = new Set(agents.map(a => a.folder || "root"));

  const folderNodes = Array.from(folderSet).map((f, i) => ({
    id: `folder:${f}`,
    label: f,
    type: "folder",
    folder: f,
    fx: 250 * Math.cos((i / folderSet.size) * 2 * Math.PI),
    fy: 250 * Math.sin((i / folderSet.size) * 2 * Math.PI)
  }));

  const agentNodes = agents.map(a => ({
    id: a.slug,
    label: a.name,
    type: "agent",
    folder: a.folder || "root",
    status: a.status || "done",
    last_task: a.last_task || null,
  }));

  agentNodes.forEach(a => {
    const style = getAgentStyle(a);
    a.baseColor = style.color;
  });

  const links = agentNodes.map(a => ({
    source: a.id,
    target: `folder:${a.folder}`
  }));

  return { nodes: [...folderNodes, ...agentNodes], links };
};

// ========================================================================
// üé® –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —É–∑–ª–æ–≤ (–¥–ª—è office.js)
// ========================================================================
window.colorByStatus = function colorByStatus(node) {
  if (node.type === "folder") return "#48cae4"; // –≥–æ–ª—É–±–æ–π ‚Äî –∫–∞—Ç–∞–ª–æ–≥–∏

  switch (node.status) {
    case "running": return "#ffd166"; // –∂—ë–ª—Ç—ã–π
    case "error":   return "#ef476f"; // –∫—Ä–∞—Å–Ω—ã–π
    case "done":    return "#06d6a0"; // –∑–µ–ª—ë–Ω—ã–π
    default:        return node.baseColor || "#9ba9bb"; // –±–∞–∑–æ–≤—ã–π —Å–µ—Ä—ã–π
  }
};

// ========================================================================
// üß† –≠–∫—Å–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —É–∑–ª–∞–º –≥—Ä–∞—Ñ–∞ (–¥–ª—è office.js)
// ========================================================================
window.onGraphNodeClick = function onGraphNodeClick(node) {

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ fillSidepanel
  if (typeof fillSidepanel === "function") {
    centerOnFolder(node.id, 1000);//  –∏–∑ brainstorm.js
    fillSidepanel(node);
  } else {
    console.warn("‚ö†Ô∏è fillSidepanel –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–ª–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –±–µ–∑ –ø–∞–Ω–µ–ª–∏");
  }

  // –æ—Ç–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É–∑–µ–ª
  if (window.__OfficeGraph__) {
    window.__OfficeGraph__.selectedNodeId = node.id;
  }

  // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∞, —á—Ç–æ–±—ã –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–∏–º–µ–Ω—è–ª–∞—Å—å —Å—Ä–∞–∑—É
  const G = window.__OfficeGraph__?.Graph;
  if (G) G.graphData(G.graphData());

};

// === –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑—É–º ForceGraph –Ω–∞–≤—Å–µ–≥–¥–∞ ===
function disableForceGraphAutoZoom(Graph) {
  console.log('disableForceGraphAutoZoom')
   if (!Graph || Graph.__autoZoomPatched) return;

  const noop = () => {};
  // 1Ô∏è‚É£ –ì–ª—É—à–∏–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∞–≤—Ç–æ—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
  ['zoomToFit', 'fitToScene', '_updateScene'].forEach(fn => {
    if (typeof Graph[fn] === 'function') {
      Graph[`__orig_${fn}`] = Graph[fn];
      Graph[fn] = noop;
    }
  });

  // 2Ô∏è‚É£ –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π "center" force, —á—Ç–æ–±—ã –≥—Ä–∞—Ñ –Ω–µ —Å—Ç—è–≥–∏–≤–∞–ª—Å—è –∫ (0,0)
  try {
    const centerForce = Graph.d3Force('center');
    if (centerForce) Graph.d3Force('center', null);
  } catch (err) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å d3Force(center):', err);
  }

  Graph.__autoZoomPatched = true;
  console.log('‚úÖ ForceGraph –∞–≤—Ç–æ-–∑—É–º –∏ –∞–≤—Ç–æ-—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã');
}

// === üß† –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã ===
function setSystemStatus(state, message) {
  const bar = document.getElementById("system-status-bar");
  const text = document.getElementById("system-status-text");
  const icon = document.getElementById("system-status-icon");
  if (!bar || !text ) return;

  bar.classList.remove("active", "busy", "error");

  switch (state) {
    case "busy":
      text.textContent = message || "–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏...";
      bar.classList.add("busy");
      break;
    case "error":
      text.textContent = message || "–û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã";
      bar.classList.add("error");
      break;
    default:
      text.textContent = message || "–í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã";
      bar.classList.add("active");
      break;
  }
}

// === üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞" –≤ –∫–∞—Ä—Ç–æ—á–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞ ===
function addCreateAgentButtonToFolder(folderName) {
  const folderSection = document.querySelector(`#folder-${folderName} .folder-actions`);
  if (!folderSection) return;

  // –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
  if (folderSection.querySelector(".add-agent-btn")) return;

  const btn = document.createElement("button");
  btn.className = "add-agent-btn";
  btn.innerHTML = `<i data-lucide="user-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞`;
  btn.onclick = () => openAgentModalForFolder(folderName);

  folderSection.prepend(btn);
  if (window.lucide) lucide.createIcons();
}

// === üß© –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ ===
window.openAgentModalForFolder = function openAgentModalForFolder(folderName) {
  const modal = document.getElementById("agent-modal");
  if (!modal) return;

  const title = modal.querySelector("h2");
  const folderSelect = modal.querySelector("#folder-select");
  const folderLabel = modal.querySelector("label[for='folder-select']");
  const form = modal.querySelector("form");

  // –ò–∑–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  if (title) title.textContent = `üë§ –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥ "${folderName}"`;

  // –°–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
  if (folderSelect) folderSelect.style.display = "none";
  if (folderLabel) folderLabel.style.display = "none";

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Å –∏–º–µ–Ω–µ–º –∫–∞—Ç–∞–ª–æ–≥–∞
  let hiddenInput = form.querySelector("input[name='folder']");
  if (!hiddenInput) {
    hiddenInput = document.createElement("input");
    hiddenInput.type = "hidden";
    hiddenInput.name = "folder";
    form.appendChild(hiddenInput);
  }
  hiddenInput.value = folderName;

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
  modal.style.display = "flex";
};

// === üöÄ –†–∞—Å—à–∏—Ä—è–µ–º renderFolder —Ç–∞–∫, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ===
const originalRenderFolder = renderFolder;
renderFolder = (name) => {
  originalRenderFolder(name);
  addCreateAgentButtonToFolder(name);
};

// === üöÄ –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ ===
document.addEventListener("DOMContentLoaded", () => {
  const observer = new MutationObserver(() => {
    document.querySelectorAll(".folder").forEach(folder => {
      const name = folder.dataset.folder;
      addCreateAgentButtonToFolder(name);
    });
  });
  const container = document.getElementById("folders-container");
  if (container) observer.observe(container, { childList: true, subtree: true });
});






