diff --git a/static/js/core.js b/static/js/core.js
--- a/static/js/core.js
+++ b/static/js/core.js
@@
 document.addEventListener("DOMContentLoaded", () => {
   if (window.lucide) lucide.createIcons();
   if (typeof AIManager !== "undefined" && AIManager.init) AIManager.init();
   if (typeof refreshFolderSelect === "function") refreshFolderSelect();
 });
+
+// === üß† –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã ===
+function setSystemStatus(state, message) {
+  const bar = document.getElementById("system-status-bar");
+  const text = document.getElementById("system-status-text");
+  const icon = document.getElementById("system-status-icon");
+  if (!bar || !text || !icon) return;
+
+  bar.classList.remove("active", "busy", "error");
+
+  switch (state) {
+    case "busy":
+      icon.textContent = "‚öôÔ∏è";
+      text.textContent = message || "–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏...";
+      bar.classList.add("busy");
+      break;
+    case "error":
+      icon.textContent = "‚ö†Ô∏è";
+      text.textContent = message || "–û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã";
+      bar.classList.add("error");
+      break;
+    default:
+      icon.textContent = "üß†";
+      text.textContent = message || "–í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã";
+      bar.classList.add("active");
+      break;
+  }
+}
+
+// === üóÇÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ ===
+async function refreshFolderSelect() {
+  try {
+    const res = await fetch("/folders");
+    if (!res.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–∞–ª–æ–≥–æ–≤");
+    const folders = await res.json();
+    const select = document.getElementById("folder-select");
+    if (!select) return;
+    select.innerHTML = folders.map(f => `<option value="\${f}">\${f}</option>`).join("");
+  } catch (e) {
+    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:", e);
+  }
+}
diff --git a/static/js/office.js b/static/js/office.js
--- a/static/js/office.js
+++ b/static/js/office.js
@@
   }
 }
+
+// === üìã –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ ===
+async function assignTaskFromOffice(slug, task) {
+  const statusBlock = document.querySelector("#sp-meta");
+  const resultBox = document.querySelector("#sp-last-result");
+  setSystemStatus("busy", "‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞...");
+  if (resultBox) resultBox.innerHTML = `<div class="spinner"></div> –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...`;
+
+  try {
+    window.__OfficeGraph__?.setAgentStatus(slug, "running");
+    window.__OfficeGraph__?.refresh();
+
+    const res = await fetch("/assign_task", {
+      method: "POST",
+      headers: { "Content-Type": "application/x-www-form-urlencoded" },
+      body: new URLSearchParams({ slug, task }),
+    });
+    const data = await res.json();
+    if (!data.ok) throw new Error(data.error || "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");
+
+    window.__OfficeGraph__?.setAgentStatus(slug, "done", data.result?.html, task);
+    window.__OfficeGraph__?.refresh();
+
+    if (statusBlock) {
+      statusBlock.innerHTML = `
+        <div>–¢–∏–ø: <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</b></div>
+        <div>–ö–∞—Ç–∞–ª–æ–≥: <b>\${currentNode?.folder || "‚Äî"}</b></div>
+        <div>–°—Ç–∞—Ç—É—Å: <b>‚úÖ –ì–æ—Ç–æ–≤–æ</b></div>`;
+    }
+
+    if (resultBox) {
+      resultBox.innerHTML = data.result?.html || data.result || "‚Äî";
+      resultBox.scrollTop = resultBox.scrollHeight;
+    }
+
+    const showLink = document.getElementById("sp-show-result");
+    if (showLink) {
+      showLink.style.display = "inline-block";
+      showLink.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç";
+      showLink.onclick = (e) => {
+        e.preventDefault();
+        showAgentResultBlock(slug, data.result?.html || data.result || "‚Äî");
+      };
+    }
+    setSystemStatus("active", "üß† –í—Å–µ –∞–≥–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã");
+  } catch (err) {
+    console.error(err);
+    window.__OfficeGraph__?.setAgentStatus(slug, "error");
+    window.__OfficeGraph__?.refresh();
+    if (resultBox)
+      resultBox.innerHTML = `<p class="error">‚ùå –û—à–∏–±–∫–∞: \${err.message}</p>`;
+    setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏");
+  }
+}
+
+// === üìã –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–≥–µ–Ω—Ç–∞ ===
+function showAgentResultBlock(agentName, resultMarkdown) {
+  let block = document.getElementById("agent-results-block");
+  if (!block) {
+    block = document.createElement("section");
+    block.id = "agent-results-block";
+    block.className = "panel";
+    block.style.marginTop = "40px";
+    block.innerHTML = `
+      <h2>üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≥–µ–Ω—Ç–∞</h2>
+      <div id="agent-results-content" class="markdown-body"></div>`;
+    document.body.appendChild(block);
+  }
+  const content = document.getElementById("agent-results-content");
+  content.innerHTML = `<h3>\${agentName}</h3>\${marked.parse(resultMarkdown || "_(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)_")}`;
+  block.scrollIntoView({ behavior: "smooth" });
+}
+
+// === üß† –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞ ===
+function showBrainstormResults(summary, discussion) {
+  let resultsBlock = document.getElementById("brainstorm-results-block");
+  if (!resultsBlock) {
+    resultsBlock = document.createElement("section");
+    resultsBlock.id = "brainstorm-results-block";
+    resultsBlock.className = "panel";
+    resultsBlock.style.marginTop = "40px";
+    resultsBlock.innerHTML = `
+      <h2>üß† –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞</h2>
+      <div id="brainstorm-discussion" class="markdown-body"></div>
+      <div id="brainstorm-summary" class="markdown-body" style="margin-top:15px;"></div>`;
+    document.body.appendChild(resultsBlock);
+  }
+  const discEl = document.getElementById("brainstorm-discussion");
+  const sumEl = document.getElementById("brainstorm-summary");
+  discEl.innerHTML = discussion.map(d => `<div><b>\${d.agent}</b>: \${marked.parse(d.response)}</div>`).join("");
+  sumEl.innerHTML = marked.parse(summary || "_(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)_");
+  resultsBlock.scrollIntoView({ behavior: "smooth" });
+}
diff --git a/static/js/brainstorm.js b/static/js/brainstorm.js
--- a/static/js/brainstorm.js
+++ b/static/js/brainstorm.js
@@
   } catch (err) {
     output.textContent = `‚ùå –û—à–∏–±–∫–∞: \${err.message}`;
     progress.style.background = "#ef476f";
     setSystemStatus("error", "‚ùå –û—à–∏–±–∫–∞ –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞");
   }
 }
+
+// === üß© –ò—Ç–æ–≥–æ–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞ ===
+function finalizeBrainstorm(summary, discussion) {
+  const output = document.getElementById("brainOut");
+  const link = document.createElement("a");
+  link.href = "#brainstorm-results-block";
+  link.textContent = "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã";
+  link.className = "show-result-link";
+  link.onclick = (e) => {
+    e.preventDefault();
+    showBrainstormResults(summary, discussion);
+  };
+  output.appendChild(link);
+}
+
+function showBrainstormResults(summary, discussion) {
+  let resultsBlock = document.getElementById("brainstorm-results-block");
+  if (!resultsBlock) {
+    resultsBlock = document.createElement("section");
+    resultsBlock.id = "brainstorm-results-block";
+    resultsBlock.className = "panel";
+    resultsBlock.style.marginTop = "40px";
+    resultsBlock.innerHTML = `
+      <h2>üß† –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–∑–≥–æ–≤–æ–≥–æ —à—Ç—É—Ä–º–∞</h2>
+      <div id="brainstorm-discussion" class="markdown-body"></div>
+      <div id="brainstorm-summary" class="markdown-body" style="margin-top:15px;"></div>`;
+    document.body.appendChild(resultsBlock);
+  }
+  const discEl = document.getElementById("brainstorm-discussion");
+  const sumEl = document.getElementById("brainstorm-summary");
+  discEl.innerHTML = discussion.map(d => `<div><b>\${d.agent}</b>: \${marked.parse(d.response)}</div>`).join("");
+  sumEl.innerHTML = marked.parse(summary || "_(–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)_");
+  resultsBlock.scrollIntoView({ behavior: "smooth" });
+}